"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è MarkdownV2 —Ä–∞–∑–º–µ—Ç–∫–∏ –≤ Telegram –±–æ—Ç–µ.
"""

from bot.utils.markdown import (
    bold, italic, code, code_block, link, hidden_link,
    strikethrough, underline, spoiler, escape_markdown_v2,
    format_notification, format_student_action
)

def get_markdown_examples():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.

    Returns:
        Dict: –°–ª–æ–≤–∞—Ä—å —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏
    """
    examples = {
        "basic_formatting": {
            "bold": bold("–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç"),
            "italic": italic("–ö—É—Ä—Å–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç"),
            "code": code("–∫–æ–¥"),
            "strikethrough": strikethrough("–ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç"),
            "underline": underline("–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç"),
            "spoiler": spoiler("–°–∫—Ä—ã—Ç—ã–π —Ç–µ–∫—Å—Ç")
        },

        "links": {
            "regular_link": link("–°—Å—ã–ª–∫–∞ –Ω–∞ Google", "https://google.com"),
            "hidden_link": hidden_link("https://example.com")
        },

        "code_blocks": {
            "simple_code_block": code_block("print('Hello, World!')"),
            "python_code_block": code_block("def hello():\n    print('Hello!')", "python")
        },

        "notifications": {
            "student_answer": format_student_action(
                "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
                "–æ—Ç–ø—Ä–∞–≤–∏–ª –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ",
                "–£—Ä–æ–∫ 1: –û—Å–Ω–æ–≤—ã –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞",
                "https://example.com/task/123"
            ),
            "student_comment": format_student_action(
                "–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞",
                "–æ—Å—Ç–∞–≤–∏–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–¥–∞–Ω–∏—é",
                "–£—Ä–æ–∫ 2: –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
            ),
            "deadline_notification": format_notification(
                "‚è∞ –ü—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è –¥–µ–¥–ª–∞–π–Ω",
                "–ó–∞–¥–∞–Ω–∏–µ: –£—Ä–æ–∫ 3: –ö–æ–Ω—Ç—Ä–æ–ª—å\n–î–µ–¥–ª–∞–π–Ω: 25.12.2024 23:59",
                "https://example.com/task/456"
            )
        },

        "complex_message": (
            f"{bold('üìö –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ')}\n\n"
            f"–°—Ç—É–¥–µ–Ω—Ç {italic('–ê–Ω–Ω–∞ –ö–æ–∑–ª–æ–≤–∞')} –æ—Ç–ø—Ä–∞–≤–∏–ª–∞ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ:\n"
            f"{code('–£—Ä–æ–∫ 4: –ú–æ—Ç–∏–≤–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞')}\n\n"
            f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {escape_markdown_v2('–í—ã–ø–æ–ª–Ω–∏–ª–∞ –≤—Å–µ –ø—É–Ω–∫—Ç—ã –∑–∞–¥–∞–Ω–∏—è!')}\n\n"
            f"{link('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–≤–µ—Ç', 'https://example.com/answer/789')}"
        )
    }

    return examples

def get_special_characters_guide():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.

    Returns:
        str: –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é
    """
    guide = f"""
{bold('–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ MarkdownV2:')}

–°–ª–µ–¥—É—é—â–∏–µ —Å–∏–º–≤–æ–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã –æ–±—Ä–∞—Ç–Ω—ã–º —Å–ª–µ—à–µ–º \\:
{code('_*[]()~`>#+-=|{}.!')}

{bold('–ü—Ä–∏–º–µ—Ä—ã —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:')}
‚Ä¢ –¢–æ—á–∫–∞: {escape_markdown_v2('–ö–æ–Ω–µ—Ü –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.')}
‚Ä¢ –í–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫: {escape_markdown_v2('–û—Ç–ª–∏—á–Ω–æ!')}
‚Ä¢ –°–∫–æ–±–∫–∏: {escape_markdown_v2('–ü—Ä–∏–º–µ—Ä (–≤–∞–∂–Ω–æ)')}
‚Ä¢ –î–µ—Ñ–∏—Å: {escape_markdown_v2('–ü—É–Ω–∫—Ç-1')}

{bold('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:')}
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é {code('escape_markdown_v2()')} –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞.
"""
    return guide.strip()

def get_formatting_tips():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–≤–µ—Ç—ã –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é.

    Returns:
        str: –°–æ–≤–µ—Ç—ã –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
    """
    tips = f"""
{bold('üí° –°–æ–≤–µ—Ç—ã –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:')}

1Ô∏è‚É£ {bold('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏-–ø–æ–º–æ—â–Ω–∏–∫–∏')}
   –í–º–µ—Å—Ç–æ —Ä—É—á–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ {code('bot.utils.markdown')}

2Ô∏è‚É£ {bold('–≠–∫—Ä–∞–Ω–∏—Ä—É–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥')}
   –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ {code('escape_markdown_v2()')} –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

3Ô∏è‚É£ {bold('–¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è')}
   –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ –ø—Ä–æ–¥–∞–∫—à–Ω

4Ô∏è‚É£ {bold('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä—ã—Ç—ã–µ —Å—Å—ã–ª–∫–∏')}
   –î–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ {code('hidden_link()')}

5Ô∏è‚É£ {bold('–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è')}
   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏, —Å–ø–∏—Å–∫–∏ –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
"""
    return tips.strip()

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–¥–µ:
if __name__ == "__main__":
    examples = get_markdown_examples()

    print("=== –ü–†–ò–ú–ï–†–´ –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø ===")
    for category, items in examples.items():
        print(f"\n{category.upper()}:")
        if isinstance(items, dict):
            for name, example in items.items():
                print(f"  {name}: {example}")
        else:
            print(f"  {items}")

    print("\n" + "="*50)
    print(get_special_characters_guide())

    print("\n" + "="*50)
    print(get_formatting_tips())