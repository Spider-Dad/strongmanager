import logging
from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

from bot.handlers.auth import Registration, check_auth
from bot.utils.markdown import bold, escape_markdown_v2

logger = logging.getLogger(__name__)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def cmd_start(message: types.Message, state: FSMContext, config):
    # –°–Ω–∞—á–∞–ª–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ª—é–±—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.finish()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    is_authorized = await check_auth(message.from_user.id)

    if is_authorized:
        # –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        await message.answer(
            f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç\\-–ø–æ–º–æ—â–Ω–∏–∫ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –æ–Ω–ª–∞–π–Ω —à–∫–æ–ª—ã Strong Manager\\!\n\n"
            f"–ó–¥–µ—Å—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö –≤–∞—à–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤\\.\n\n"
            f"{bold('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:')}\n"
            f"/help \\- –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
            f"/about \\- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"
        )
    else:
        # –î–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        await message.answer(
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ\\! –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à email, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –æ–Ω–ª–∞–π–Ω —à–∫–æ–ª–µ –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π Strong Manager"
        )
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è email
        await Registration.waiting_for_email.set()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
async def cmd_help(message: types.Message, config):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    is_authorized = await check_auth(message.from_user.id)

    if is_authorized:
        await message.answer(
            f"üìö {bold('–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞')}\n\n"
            f"{bold('–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:')}\n"
            f"/start \\- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
            f"/help \\- –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
            f"/about \\- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n\n"
            f"–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö –≤–∞—à–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤\\."
        )
    else:
        await message.answer(
            f"–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è\\.\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º\\."
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about
async def cmd_about(message: types.Message, config):
    await message.answer(
        f"üì± {bold('–ë–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –æ–Ω–ª–∞–π–Ω —à–∫–æ–ª—ã Strong Manager')}\n\n"
        f"–í–µ—Ä—Å–∏—è: 1\\.0\\.0\n\n"
        f"–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:\n"
        f"‚Ä¢ –ù–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∑–∞–¥–∞–Ω–∏—è\n"
        f"‚Ä¢ –ü—Ä–∏–±–ª–∏–∂–∞—é—â–∏–µ—Å—è –¥–µ–¥–ª–∞–π–Ω—ã –ø–æ –æ—Ç–≤–µ—Ç–∞–º –Ω–∞ –∑–∞–¥–∞–Ω–∏—è\n\n"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
async def cmd_unknown(message: types.Message):
    await message.answer(
        "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\\. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\\."
    )

def register_common_handlers(dp: Dispatcher, config):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏.

    Args:
        dp: –î–∏—Å–ø–µ—Ç—á–µ—Ä –±–æ—Ç–∞
        config: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
    """
    dp.register_message_handler(
        lambda msg, state: cmd_start(msg, state, config),
        commands=["start"],
        state="*"
    )
    dp.register_message_handler(
        lambda msg: cmd_help(msg, config),
        commands=["help"],
        state="*"
    )
    dp.register_message_handler(
        lambda msg: cmd_about(msg, config),
        commands=["about"],
        state="*"
    )
    dp.register_message_handler(
        cmd_unknown,
        commands=["*"],
        state="*"
    )

    # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è)
    dp.register_message_handler(
        lambda message: message.answer(
            "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è\\.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º\\."
        ),
        state=None,
        content_types=types.ContentType.TEXT
    )
