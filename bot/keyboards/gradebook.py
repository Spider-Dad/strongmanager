from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def kb_progress_filters():
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton("–§–∏–ª—å—Ç—Ä: —Ç—Ä–µ–Ω–∏–Ω–≥", callback_data="gb:filter:training"),
        InlineKeyboardButton("–§–∏–ª—å—Ç—Ä: —É—Ä–æ–∫", callback_data="gb:filter:lesson"),
    )
    kb.add(
        InlineKeyboardButton("–°—Ç–∞—Ç—É—Å: –≤–æ–≤—Ä–µ–º—è", callback_data="gb:status:on_time"),
        InlineKeyboardButton("–°—Ç–∞—Ç—É—Å: –Ω–µ –≤–æ–≤—Ä–µ–º—è", callback_data="gb:status:not_on_time"),
    )
    return kb


def kb_training_select(options: list[tuple[int, str]], has_more: bool = False):
    kb = InlineKeyboardMarkup(row_width=1)
    for tr_id, title in options:
        title_short = title if len(title) <= 48 else title[:45] + "‚Ä¶"
        kb.add(InlineKeyboardButton(f"üìò {title_short}", callback_data=f"gb:set:tr:{tr_id}"))
    if has_more:
        kb.add(InlineKeyboardButton("–ü–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 10", callback_data="gb:nop"))
    kb.add(InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="gb:back"))
    return kb


def kb_pagination(page: int, total_pages: int, base_cb: str) -> InlineKeyboardMarkup:
    """–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.

    base_cb: –ø—Ä–µ—Ñ–∏–∫—Å callback, –Ω–∞–ø—Ä–∏–º–µ—Ä "gb:page:tr:12:lesson:100". –ú—ã –¥–æ–±–∞–≤–∏–º ":p:{page}" –≤ –∫–æ–Ω–µ—Ü.
    """
    kb = InlineKeyboardMarkup(row_width=3)
    prev_page = max(1, page - 1)
    next_page = min(total_pages, page + 1)
    kb.add(
        InlineKeyboardButton("‚Üê", callback_data=f"{base_cb}:p:{prev_page}"),
        InlineKeyboardButton(f"{page}/{total_pages}", callback_data="gb:nop"),
        InlineKeyboardButton("‚Üí", callback_data=f"{base_cb}:p:{next_page}"),
    )
    kb.add(InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="gb:back"))
    return kb
